---
# Adjust vars for the AWS settings and region
# These VPCs, subnets, and gateways will be created as part of the demo

#R80_Vars
mgmt_server: 
mgmt_user: api_user
mgmt_password: vpn123
#use api fingerprint on the R80 management server to get the fingerprint
mgmt_fingerprint: 38:92:18:15:63:F6:84:3A:A2:75:61:3D:A6:9C:83:07:55:56:AE:90 
#DataCenter Name in R80/R80.10 for the AWS DataCenter Object
R80_AWS_DataCenter: "AWS_Ohio"

region: us-east-2
aws_keyname: AWS-mysshkey
aws_vpc_name: CheckMates-Demo-VPC1
aws_vpc_cidr: 10.20.0.0/16
aws_external_subnet_cidr: 10.20.0.0/24
aws_internal_subnet_cidr: 10.20.1.0/24
aws_webserver_subnet_cidr: 10.20.10.0/24
aws_database_subnet_cidr: 10.20.11.0/24
aws_lb1_subnet_cidr: 10.20.5.0/24
aws_lb2_subnet_cidr: 10.20.6.0/24
perimeter_gw_external_ip: 10.20.0.10
perimeter_gw_internal_ip: 10.20.1.10
aws_internal_route: 10.20.1.1
r53zone: myroute53zone.net
externaldnshost: vsec-demo 
#
# Changes are not needed below this line
#
primary_az: "{{ region }}a"
secondary_az: "{{ region }}b"
xchkp_topo: "specific:aws_CheckMates_nets"
my_user_data: |
                #!/bin/bash
                clish -c 'set user admin shell /bin/bash' -s
                clish -c 'set static-route {{ aws_lb1_subnet_cidr }} nexthop gateway address {{ aws_internal_route }} on' -s
                clish -c 'set static-route {{ aws_lb2_subnet_cidr }} nexthop gateway address {{ aws_internal_route }} on' -s
                clish -c 'set static-route {{ aws_webserver_subnet_cidr }} nexthop gateway address {{ aws_internal_route }} on' -s
                clish -c 'set static-route {{ aws_database_subnet_cidr }} nexthop gateway address {{ aws_internal_route }} on' -s
                config_system -s 'install_security_gw=true&install_ppak=true&gateway_cluster_member=false&install_security_managment=false&ftw_sic_key=vpn12345';shutdown -r now;

ubuntu_user_data: |
                    #!/bin/bash
                    until sudo apt-get update && sudo apt-get -y install apache2;do
                      sleep 1
                    done
                    until curl \
                      --output /var/www/html/vsec.jpg \
                      --url https://s3-us-west-2.amazonaws.com/azure.templates/testdrive/vsec.jpg ; do
                       sleep 1
                    done

                    sudo echo "<html><head><meta http-equiv=refresh content=2;'http://{{ externaldnshost }}.{{ r53zone }}/' /> </head><body><center><H1>" > /var/www/html/index.html
                    sudo echo $HOSTNAME >> /var/www/html/index.html
                    sudo echo "<BR><BR>Hello World - Check Point vSEC Demo !<BR><BR>" >> /var/www/html/index.html
                    sudo echo "<img src=\"/vsec.jpg\" height=\"25%\">" >> /var/www/html/index.html
